generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alumno {
  id_alumno            Int               @id @default(autoincrement())
  rut                  String            @unique(map: "uk_rut") @db.VarChar(15)
  primer_nombre        String            @db.VarChar(50)
  segundo_nombre       String            @db.VarChar(50)
  apellido_paterno     String            @db.VarChar(50)
  apellido_materno     String            @db.VarChar(50)
  direccion_academica  String            @db.VarChar(120)
  direccion_particular String            @db.VarChar(120)
  telefono_personal    String            @db.VarChar(15)
  telefono_familiar    String            @db.VarChar(15)
  correo_institucional String            @unique(map: "uk_correo_institucional") @db.VarChar(100)
  correo_personal      String            @db.VarChar(100)
  id_carrera           Int
  id_usuario           Int
  usuario              usuario           @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "alumno_ibfk_1")
  carrera              carrera           @relation(fields: [id_carrera], references: [id_carrera], onDelete: Cascade)
  bitacora_alumno      bitacora_alumno[]
  conocimiento         conocimiento[]
  inscribe             inscribe[]

  @@index([id_carrera], map: "alumno_id_carrera_fkey")
  @@index([id_usuario], map: "id_usuario")
}

model aptitud {
  id_aptitud     Int            @id @default(autoincrement())
  nombre_aptitud String         @db.VarChar(50)
  id_estado      Int
  estado_aptitud estado_aptitud @relation(fields: [id_estado], references: [id_estado], map: "aptitud_ibfk_1")
  conocimiento   conocimiento[]

  @@index([id_estado], map: "id_estado")
}

model archivo_evaluacion {
  id_archivo_evaluacion Int                  @id @default(autoincrement())
  nombre                String               @db.VarChar(200)
  tipo_archivo          String               @db.VarChar(100)
  archivo               Bytes
  id_inscripcion        Int
  tipo_documento        String               @db.VarChar(50)
  id_estado_evaluacion  Int
  estado_evaluacion     estado_evaluacion    @relation(fields: [id_estado_evaluacion], references: [id_estado_evaluacion], onDelete: Cascade)
  inscripcion_practica  inscripcion_practica @relation(fields: [id_inscripcion], references: [id_inscripcion_practica], onDelete: Cascade)

  @@index([id_estado_evaluacion], map: "archivo_evaluacion_id_estado_evaluacion_fkey")
  @@index([id_inscripcion], map: "archivo_evaluacion_id_inscripcion_fkey")
}

model archivo_informe {
  id_archivo_informe   Int                  @id @default(autoincrement())
  nombre               String               @db.VarChar(200)
  tipo_archivo         String               @db.VarChar(100)
  archivo              Bytes
  id_inscripcion       Int
  tipo_documento       String               @db.VarChar(50)
  id_estado_informe    Int
  estado_informe       estado_informe       @relation(fields: [id_estado_informe], references: [id_estado_informe], onDelete: Cascade)
  inscripcion_practica inscripcion_practica @relation(fields: [id_inscripcion], references: [id_inscripcion_practica], onDelete: Cascade)

  @@index([id_estado_informe], map: "archivo_informe_id_estado_informe_fkey")
  @@index([id_inscripcion], map: "archivo_informe_id_inscripcion_fkey")
}

model archivo_inscripcion {
  id_archivo           Int                  @id @default(autoincrement())
  nombre               String               @db.VarChar(200)
  tipo_archivo         String               @db.VarChar(100)
  archivo              Bytes
  id_inscripcion       Int
  tipo_documento       String               @db.VarChar(50)
  inscripcion_practica inscripcion_practica @relation(fields: [id_inscripcion], references: [id_inscripcion_practica], onDelete: Cascade)

  @@index([id_inscripcion], map: "archivo_inscripcion_id_inscripcion_fkey")
}

model asignatura {
  id_asignatura        Int               @id @default(autoincrement())
  nombre_asignatura    String            @db.VarChar(100)
  seccion              Int
  id_periodo_academico Int
  periodo_academico    periodo_academico @relation(fields: [id_periodo_academico], references: [id_periodo_academico], onDelete: Cascade)
  inscribe             inscribe[]

  @@index([id_periodo_academico], map: "asignatura_id_periodo_academico_fkey")
}

model bitacora_alumno {
  id_bitacora             Int                  @id @default(autoincrement())
  titulo                  String               @db.VarChar(200)
  descripcion             String               @db.VarChar(1300)
  fecha_creacion          DateTime             @db.Date
  hora_inicio             DateTime             @db.Time(0)
  hora_fin                DateTime             @db.Time(0)
  id_tipo_bitacora        Int
  id_estado_bitacora      Int
  id_inscripcion_practica Int
  id_alumno               Int
  alumno                  alumno               @relation(fields: [id_alumno], references: [id_alumno], onDelete: Cascade, map: "bitacora_alumno_ibfk_1")
  estado_bitacora         estado_bitacora      @relation(fields: [id_estado_bitacora], references: [id_estado_bitacora])
  inscripcion_practica    inscripcion_practica @relation(fields: [id_inscripcion_practica], references: [id_inscripcion_practica], onDelete: Cascade)
  tipo_bitacora           tipo_bitacora        @relation(fields: [id_tipo_bitacora], references: [id_tipo_bitacora])

  @@index([id_alumno], map: "bitacora_alumno_id_alumno_fkey")
  @@index([id_estado_bitacora], map: "bitacora_alumno_id_estado_bitacora_fkey")
  @@index([id_inscripcion_practica], map: "bitacora_alumno_id_inscripcion_practica_fkey")
  @@index([id_tipo_bitacora], map: "bitacora_alumno_id_tipo_bitacora_fkey")
}

model carrera {
  id_carrera     Int      @id @default(autoincrement())
  nombre_carrera String
  alumno         alumno[]
}

model conocimiento {
  id_conocimiento Int     @id @default(autoincrement())
  id_alumno       Int
  id_aptitud      Int
  alumno          alumno  @relation(fields: [id_alumno], references: [id_alumno], onDelete: Cascade)
  aptitud         aptitud @relation(fields: [id_aptitud], references: [id_aptitud], onDelete: Cascade)

  @@index([id_alumno], map: "conocimiento_id_alumno_fkey")
  @@index([id_aptitud], map: "conocimiento_id_aptitud_fkey")
}

model empresa {
  id_empresa           Int                    @id @default(autoincrement())
  nombre               String                 @db.VarChar(50)
  departamento         String                 @db.VarChar(50)
  web                  String                 @db.VarChar(50)
  rubro                String                 @db.VarChar(50)
  telefono             String                 @db.VarChar(18)
  direccion            String                 @db.VarChar(100)
  id_comuna            Int
  comuna               comuna                 @relation(fields: [id_comuna], references: [id_comuna], onDelete: Cascade)
  inscripcion_practica inscripcion_practica[]
  oferta_practica      oferta_practica[]
  supervisor           supervisor[]

  @@index([id_comuna], map: "empresa_id_comuna_fkey")
}

model estado_bitacora {
  id_estado_bitacora     Int               @id @default(autoincrement())
  nombre_estado_bitacora String
  bitacora_alumno        bitacora_alumno[]
}

model estado_evaluacion {
  id_estado_evaluacion     Int                  @id @default(autoincrement())
  nombre_estado_evaluacion String
  archivo_evaluacion       archivo_evaluacion[]
}

model estado_informe {
  id_estado_informe     Int               @id @default(autoincrement())
  nombre_estado_informe String
  archivo_informe       archivo_informe[]
}

model estado_inscripcion {
  id_estado_inscripcion     Int                    @id @default(autoincrement())
  nombre_estado_inscripcion String
  inscripcion_practica      inscripcion_practica[]
}

model estado_practica {
  id_estado_practica     Int        @id @default(autoincrement())
  nombre_estado_practica String
  inscribe               inscribe[]
}

model inscribe {
  id_inscripcion       Int                    @id @default(autoincrement())
  id_alumno            Int
  id_asignatura        Int
  id_estado_practica   Int
  alumno               alumno                 @relation(fields: [id_alumno], references: [id_alumno], onDelete: Cascade)
  asignatura           asignatura             @relation(fields: [id_asignatura], references: [id_asignatura], onDelete: Cascade)
  estado_practica      estado_practica        @relation(fields: [id_estado_practica], references: [id_estado_practica], onDelete: Cascade)
  inscripcion_practica inscripcion_practica[]

  @@index([id_alumno], map: "inscribe_id_alumno_fkey")
  @@index([id_asignatura], map: "inscribe_id_asignatura_fkey")
  @@index([id_estado_practica], map: "inscribe_id_estado_practica_fkey")
}

model inscripcion_practica {
  id_inscripcion_practica    Int                   @id @default(autoincrement())
  fecha_inscripcion_practica DateTime              @db.Date
  fecha_inicio               DateTime              @db.Date
  fecha_fin                  DateTime              @db.Date
  descripcion                String                @db.VarChar(500)
  objetivos                  String                @db.VarChar(500)
  actividades                String                @db.VarChar(500)
  id_empresa                 Int?
  id_supervisor              Int?
  id_oferta                  Int?
  id_estado_inscripcion      Int
  id_modalidad               Int
  id_inscribe                Int
  observaciones              String                @db.VarChar(500)
  lunes_manana1              DateTime?             @db.Time(0)
  lunes_manana2              DateTime?             @db.Time(0)
  lunes_tarde1               DateTime?             @db.Time(0)
  lunes_tarde2               DateTime?             @db.Time(0)
  martes_manana1             DateTime?             @db.Time(0)
  martes_manana2             DateTime?             @db.Time(0)
  martes_tarde1              DateTime?             @db.Time(0)
  martes_tarde2              DateTime?             @db.Time(0)
  miercoles_manana1          DateTime?             @db.Time(0)
  miercoles_manana2          DateTime?             @db.Time(0)
  miercoles_tarde1           DateTime?             @db.Time(0)
  miercoles_tarde2           DateTime?             @db.Time(0)
  jueves_manana1             DateTime?             @db.Time(0)
  jueves_manana2             DateTime?             @db.Time(0)
  jueves_tarde1              DateTime?             @db.Time(0)
  jueves_tarde2              DateTime?             @db.Time(0)
  viernes_manana1            DateTime?             @db.Time(0)
  viernes_manana2            DateTime?             @db.Time(0)
  viernes_tarde1             DateTime?             @db.Time(0)
  viernes_tarde2             DateTime?             @db.Time(0)
  sabado_manana1             DateTime?             @db.Time(0)
  sabado_manana2             DateTime?             @db.Time(0)
  sabado_tarde1              DateTime?             @db.Time(0)
  sabado_tarde2              DateTime?             @db.Time(0)
  archivo_evaluacion         archivo_evaluacion[]
  archivo_informe            archivo_informe[]
  archivo_inscripcion        archivo_inscripcion[]
  bitacora_alumno            bitacora_alumno[]
  empresa                    empresa?              @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade)
  estado_inscripcion         estado_inscripcion    @relation(fields: [id_estado_inscripcion], references: [id_estado_inscripcion], onDelete: Cascade)
  inscribe                   inscribe              @relation(fields: [id_inscribe], references: [id_inscripcion], onDelete: Cascade)
  modalidad                  modalidad             @relation(fields: [id_modalidad], references: [id_modalidad], onDelete: NoAction, onUpdate: NoAction)
  oferta_practica            oferta_practica?      @relation(fields: [id_oferta], references: [id_oferta_practica])
  supervisor                 supervisor?           @relation(fields: [id_supervisor], references: [id_supervisor], onDelete: Cascade)

  @@index([id_estado_inscripcion], map: "inscripcion_practica_id_estado_inscripcion_fkey")
  @@index([id_inscribe], map: "inscripcion_practica_id_inscribe_fkey")
  @@index([id_modalidad], map: "inscripcion_practica_id_modalidad_fkey")
  @@index([id_oferta], map: "inscripcion_practica_id_oferta_fkey")
  @@index([id_supervisor], map: "inscripcion_practica_id_supervisor_fkey")
  @@index([id_empresa], map: "inscripcion_practica_id_empresa_fkey")
}

model modalidad {
  id_modalidad         Int                    @id @default(autoincrement())
  nombre_modalidad     String
  inscripcion_practica inscripcion_practica[]
  oferta_practica      oferta_practica[]
}

model oferta_practica {
  id_oferta_practica   Int                    @id @default(autoincrement())
  titulo               String                 @db.VarChar(50)
  descripcion          String                 @db.VarChar(3000)
  experiencia_laboral  Boolean
  cupos                Int
  id_modalidad         Int
  id_periodo_academico Int
  id_empresa           Int?
  inscripcion_practica inscripcion_practica[]
  empresa              empresa?               @relation(fields: [id_empresa], references: [id_empresa])
  modalidad            modalidad              @relation(fields: [id_modalidad], references: [id_modalidad], onDelete: Cascade)
  periodo_academico    periodo_academico      @relation(fields: [id_periodo_academico], references: [id_periodo_academico], onDelete: Cascade)

  @@index([id_empresa], map: "oferta_practica_id_empresa_fkey")
  @@index([id_modalidad], map: "oferta_practica_id_modalidad_fkey")
  @@index([id_periodo_academico], map: "oferta_practica_id_periodo_academico_fkey")
}

model periodo_academico {
  id_periodo_academico Int               @id @default(autoincrement())
  anio                 Int
  periodo              Int
  asignatura           asignatura[]
  oferta_practica      oferta_practica[]
}

model profesional {
  id_profesional       Int     @id @default(autoincrement())
  rut                  String  @unique(map: "uk_rut") @db.VarChar(15)
  primer_nombre        String  @db.VarChar(50)
  segundo_nombre       String? @db.VarChar(50)
  primer_apellido      String  @db.VarChar(50)
  segundo_apellido     String? @db.VarChar(50)
  telefono             String  @db.VarChar(20)
  correo_institucional String  @unique(map: "uk_correo_institucional") @db.VarChar(100)
  id_usuario           Int
  usuario              usuario @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "profesional_ibfk_1")

  @@index([id_usuario], map: "id_usuario")
}

model tipo_bitacora {
  id_tipo_bitacora     Int               @id
  nombre_tipo_bitacora String            @db.VarChar(50)
  bitacora_alumno      bitacora_alumno[]
}

model tipo_usuario {
  id_tipo_usuario     Int       @id @default(autoincrement())
  nombre_tipo_usuario String    @db.VarChar(70)
  usuario             usuario[]
}

model usuario {
  id_usuario      Int           @id @default(autoincrement())
  rut             String        @unique(map: "rut") @db.VarChar(15)
  contrasena      String        @db.VarChar(255)
  id_tipo_usuario Int
  alumno          alumno[]
  profesional     profesional[]
  tipo_usuario    tipo_usuario  @relation(fields: [id_tipo_usuario], references: [id_tipo_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_ibfk_1")

  @@index([id_tipo_usuario], map: "usuario_id_tipo_usuario_fkey")
}

model supervisor {
  id_supervisor        Int                    @id @default(autoincrement())
  primer_nombre        String                 @db.VarChar(30)
  segundo_nombre       String                 @db.VarChar(30)
  apellido_paterno     String                 @db.VarChar(30)
  apellido_materno     String                 @db.VarChar(30)
  cargo                String                 @db.VarChar(50)
  telefono             String                 @db.VarChar(15)
  correo               String                 @db.VarChar(100)
  id_empresa           Int
  inscripcion_practica inscripcion_practica[]
  empresa              empresa                @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_empresa_supervisor")

  @@index([id_empresa], map: "fk_empresa_supervisor")
}

model estado_aptitud {
  id_estado     Int       @id @default(autoincrement())
  nombre_estado String    @db.VarChar(20)
  aptitud       aptitud[]
}

model comuna {
  id_comuna    Int       @id @default(autoincrement())
  id_provincia Int
  nombre       String    @db.VarChar(50)
  provincia    provincia @relation(fields: [id_provincia], references: [id_provincia], onDelete: Cascade, map: "comuna_ibfk_1")
  empresa      empresa[]

  @@index([id_provincia], map: "id_provincia")
}

model provincia {
  id_provincia     Int      @id @default(autoincrement())
  id_region        Int
  nombre_provincia String   @db.VarChar(50)
  comuna           comuna[]
  region           region   @relation(fields: [id_region], references: [id_region], onDelete: Cascade, map: "provincia_ibfk_1")

  @@index([id_region], map: "id_region")
}

model region {
  id_region     Int         @id @default(autoincrement())
  nombre_region String      @db.VarChar(50)
  provincia     provincia[]
}
